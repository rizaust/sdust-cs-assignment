import java.util.Arrays;
import java.util.Scanner;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
public class Main{
    public static void main(String[] args) {
        HashMap<String, Student> all = new HashMap<String,Student>();
        Scanner in = new Scanner(System.in);
        int n =0;
        while (true) {
			String line = in.nextLine();
			String values[] = line.split(",");
			if (values[0].equals("exit")) {
				break;
			}
			if (!all.containsKey(values[0])) {
				all.put(values[0], new Student(values[0], Integer.valueOf(values[1])));
				n++;
			}
			all.get(values[0]).addsubject(values[2], Integer.valueOf(values[3]));
			
        }
        Student[] stus = new Student[all.size()];
		for (String key : all.keySet()) {
			if (all.get(key) != null) {
				stus[--n] = all.get(key);
			}
		}
		Arrays.sort(stus);
		int i = 1;
		for (Student s : stus) {
			System.out.print(String.format("No%d:", i));
			System.out.println(s);
			i++;
		}
    }
}
class Student implements Comparable<Student>{
    private String name;
    private int no;
    private int total=0;
    private HashMap<String, Integer> score = new HashMap<String, Integer>();
    public Student(String name, int no) {
		this.name = name;
		this.no = no;
	}
    @Override
	public int compareTo(Student o) {
		if (total / (score.size() + 0.0) != o.total / (o.score.size() + 0.0)) {
			if(  (total / (score.size() + 0.0) < o.total / (o.score.size() + 0.0))) {
				return 1;
			}else {
				return -1;
			}
		} else {
			return no - o.no;
		}
    }
    public void addsubject(String name, int score) {
		this.score.put(name, score);
		total += score;
	}
    @Override
	public String toString() {
		return no + "," + name;
	}
} 